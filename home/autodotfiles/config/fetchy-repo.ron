(
  name: "AutoDotFiles",
  description: "Repository for AutoDotFiles",
  packages: [
    (
      name: "bat",
      download: (
        source: GitHub(
          author: "sharkdp",
          repo_name: "bat",
          asset_pattern: "x86_64-unknown-linux-musl.tar.gz$"
        ),
        file_format: Archive(
          format: TarGz,
          files: [
            (
              relative_path: "bat-.*/bat$",
              file_type: Binary(
                copy_as: "bat"
              )
            )
          ]
        ),
        version_extraction: (
          source: TagName
        )
      )
    ),
    (
      name: "bjobs",
      download: (
        source: GitHub(
          author: "ClementNerma",
          repo_name: "BackgroundJobs",
          asset_pattern: "^bjobs-linux-x86_64-musl.zip$"
        ),
        file_format: Archive(
          format: Zip,
          files: [
            (
              relative_path: "^bjobs$",
              file_type: Binary(
                copy_as: "bjobs"
              )
            )
          ]
        ),
        version_extraction: (
          source: TagName
        )
      )
    ),
    (
      name: "crony",
      download: (
        source: GitHub(
          author: "ClementNerma",
          repo_name: "Crony",
          asset_pattern: "^crony-linux-x86_64.zip$"
        ),
        file_format: Archive(
          format: Zip,
          files: [
            (
              relative_path: "^crony$",
              file_type: Binary(
                copy_as: "crony"
              )
            )
          ]
        ),
        version_extraction: (
          source: TagName
        )
      )
    ),
    (
      name: "erdtree",
      download: (
        source: GitHub(
          author: "solidiquis",
          repo_name: "erdtree",
          asset_pattern: "-x86_64-unknown-linux-gnu.tar.gz$"
        ),
        file_format: Archive(
          format: TarGz,
          files: [
            (
              relative_path: "^erd$",
              file_type: Binary(
                copy_as: "erd"
              )
            )
          ]
        ),
        version_extraction: (
          source: TagName
        )
      )
    ),
    (
      name: "exa",
      download: (
        source: GitHub(
          author: "ogham",
          repo_name: "exa",
          asset_pattern: "^exa-linux-x86_64-musl-v.*.zip$"
        ),
        file_format: Archive(
          format: Zip,
          files: [
            (
              relative_path: "^bin/exa",
              file_type: Binary(
                copy_as: "exa"
              )
            )
          ]
        ),
        version_extraction: (
          source: TagName
        )
      )
    ),
    (
      name: "fd",
      download: (
        source: GitHub(
          author: "sharkdp",
          repo_name: "fd",
          asset_pattern: "-x86_64-unknown-linux-musl.tar.gz$"
        ),
        file_format: Archive(
          format: TarGz,
          files: [
            (
              relative_path: "^fd-.*/fd$",
              file_type: Binary(
                copy_as: "fd"
              )
            )
          ]
        ),
        version_extraction: (
          source: TagName
        )
      )
    ),
    (
      name: "ffmpeg",
      download: (
        source: Direct(
          url: "https://johnvansickle.com/ffmpeg/releases/ffmpeg-release-amd64-static.tar.xz"
        ),
        file_format: Archive(
          format: TarXz,
          files: [
            (
              relative_path: "^ffmpeg-(\\d\\.)-amd64-static/ffmpeg$",
              file_type: Binary(
                copy_as: "ffmpeg"
              )
            ),
            (
              relative_path: "^ffmpeg-(\\d\\.)-amd64-static/ffprobe$",
              file_type: Binary(
                copy_as: "ffprobe"
              )
            )
          ]
        ),
        version_extraction: (
          source: Url
          // TODO: find a way to extraction version number
        )
      )
    ),
    (
      name: "gitui",
      download: (
        source: GitHub(
          author: "extrawurst",
          repo_name: "gitui",
          asset_pattern: "^gitui-linux-musl.tar.gz$"
        ),
        file_format: Archive(
          format: TarGz,
          files: [
            (
              relative_path: "^(./)?gitui$",
              file_type: Binary(
                copy_as: "gitui"
              )
            )
          ]
        ),
        version_extraction: (
          source: TagName
        )
      )
    ),
    (
      name: "helix",
      download: (
        source: GitHub(
          author: "helix-editor",
          repo_name: "helix",
          asset_pattern: "-x86_64-linux.tar.xz$"
        ),
        file_format: Archive(
          format: TarXz,
          files: [
            (
              relative_path: "-x86_64-linux/hx$",
              file_type: Binary(
                copy_as: "hx"
              )
            ),
            (
              relative_path: "-x86_64-linux/runtime$",
              file_type: ConfigSubDir(
                copy_as: "runtime"
              )
            )
          ]
        ),
        version_extraction: (
          source: TagName
        )
      )
    ),
    (
      name: "jumpy",
      download: (
        source: GitHub(
          author: "ClementNerma",
          repo_name: "Jumpy",
          asset_pattern: "^jumpy-linux-x86_64-musl.zip$"
        ),
        file_format: Archive(
          format: Zip,
          files: [
            (
              relative_path: "^jumpy$",
              file_type: Binary(
                copy_as: "jumpy"
              )
            )
          ]
        ),
        version_extraction: (
          source: TagName
        )
      )
    ),
    (
      name: "kopia",
      download: (
        source: GitHub(
          author: "kopia",
          repo_name: "kopia",
          asset_pattern: "-linux-x64.tar.gz$"
        ),
        file_format: Archive(
          format: TarGz,
          files: [
            (
              relative_path: "^kopia-.*/kopia$",
              file_type: Binary(
                copy_as: "kopia"
              )
            )
          ]
        ),
        version_extraction: (
          source: TagName
        )
      )
    ),
    (
      name: "gdu",
      download: (
        source: GitHub(
          author: "dundee",
          repo_name: "gdu",
          asset_pattern: "^gdu_linux_amd64.tgz$"
        ),
        file_format: Archive(
          format: TarGz,
          files: [
            (
              relative_path: "^gdu_linux_amd64$",
              file_type: Binary(
                copy_as: "gdu"
              )
            )
          ]
        ),
        version_extraction: (
          source: TagName
        )
      )
    ),
    (
      name: "github-cli",
      download: (
        source: GitHub(
          author: "cli",
          repo_name: "cli",
          asset_pattern: "_linux_amd64.tar.gz$"
        ),
        file_format: Archive(
          format: TarGz,
          files: [
            (
              relative_path: "/bin/gh$",
              file_type: Binary(
                copy_as: "gh"
              )
            )
          ]
        ),
        version_extraction: (
          source: TagName
        )
      )
    ),
    (
      name: "lazydocker",
      download: (
        source: GitHub(
          author: "jesseduffield",
          repo_name: "lazydocker",
          asset_pattern: "^lazydocker_[\\d\\.]+_Linux_x86_64.tar.gz$"
        ),
        file_format: Archive(
          format: TarGz,
          files: [
            (
              relative_path: "^lazydocker$",
              file_type: Binary(
                copy_as: "lazydocker"
              )
            )
          ]
        ),
        version_extraction: (
          source: TagName
        )
      )
    ),
    (
      name: "nushell",
      download: (
        source: GitHub(
          author: "nushell",
          repo_name: "nushell",
          asset_pattern: "-x86_64-unknown-linux-musl.tar.gz$"
        ),
        file_format: Archive(
          format: TarGz,
          files: [
            (
              relative_path: "-x86_64-unknown-linux-musl/nu$",
              file_type: Binary(
                copy_as: "nu"
              )
            )
          ]
        ),
        version_extraction: (
          source: TagName
        )
      )
    ),
    (
      name: "ripgrep",
      download: (
        source: GitHub(
          author: "BurntSushi",
          repo_name: "ripgrep",
          asset_pattern: "-x86_64-unknown-linux-musl.tar.gz$"
        ),
        file_format: Archive(
          format: TarGz,
          files: [
            (
              relative_path: "^ripgrep-.*/rg$",
              file_type: Binary(
                copy_as: "rg"
              )
            )
          ]
        ),
        version_extraction: (
          source: TagName
        )
      )
    ),
    (
      name: "scout",
      download: (
        source: GitHub(
          author: "jhbabon",
          repo_name: "scout",
          asset_pattern: "^scout-linux$"
        ),
        file_format: Binary(
          filename: "scout"
        ),
        version_extraction: (
          source: TagName
        )
      )
    ),
    (
      name: "starship",
      download: (
        source: GitHub(
          author: "starship",
          repo_name: "starship",
          asset_pattern: "^starship-x86_64-unknown-linux-musl.tar.gz$"
        ),
        file_format: Archive(
          format: TarGz,
          files: [
            (
              relative_path: "^starship$",
              file_type: Binary(
                copy_as: "starship"
              )
            )
          ]
        ),
        version_extraction: (
          source: TagName
        )
      )
    ),
    (
      name: "tokei",
      download: (
        source: GitHub(
          author: "XAMPPRocky",
          repo_name: "tokei",
          asset_pattern: "^tokei-x86_64-unknown-linux-musl.tar.gz$"
        ),
        file_format: Archive(
          format: TarGz,
          files: [
            (
              relative_path: "^tokei$",
              file_type: Binary(
                copy_as: "tokei"
              )
            )
          ]
        ),
        version_extraction: (
          source: TagName
        )
      )
    ),
    (
      name: "topgrade",
      download: (
        source: GitHub(
          author: "topgrade-rs",
          repo_name: "topgrade",
          asset_pattern: "-x86_64-unknown-linux-musl.tar.gz$"
        ),
        file_format: Archive(
          format: TarGz,
          files: [
            (
              relative_path: "^topgrade$",
              file_type: Binary(
                copy_as: "topgrade"
              )
            )
          ]
        ),
        version_extraction: (
          source: TagName
        )
      )
    ),
    (
      name: "trasher",
      download: (
        source: GitHub(
          author: "ClementNerma",
          repo_name: "Trasher",
          asset_pattern: "-x86_64-unknown-linux-gnu.tar.xz$"
        ),
        file_format: Archive(
          format: TarXz,
          files: [
            (
              relative_path: "/trasher$",
              file_type: Binary(
                copy_as: "trasher"
              )
            )
          ]
        ),
        version_extraction: (
          source: TagName
        )
      )
    ),
    (
      name: "yt-dlp",
      download: (
        source: GitHub(
          author: "yt-dlp",
          repo_name: "yt-dlp",
          asset_pattern: "^yt-dlp$"
        ),
        file_format: Binary(
          filename: "yt-dlp"
        ),
        version_extraction: (
          source: TagName
        )
      )
    ),
    (
      name: "ytdl",
      download: (
        source: GitHub(
          author: "ClementNerma",
          repo_name: "ytdl",
          asset_pattern: "^ytdl-linux-x86_64-musl.zip$"
        ),
        file_format: Archive(
          format: Zip,
          files: [
            (
              relative_path: "^ytdl$",
              file_type: Binary(
                copy_as: "ytdl"
              )
            )
          ]
        ),
        version_extraction: (
          source: TagName
        )
      )
    ),
    (
      name: "zellij",
      download: (
        source: GitHub(
          author: "zellij-org",
          repo_name: "zellij",
          asset_pattern: "^zellij-x86_64-unknown-linux-musl.tar.gz$"
        ),
        file_format: Archive(
          format: TarGz,
          files: [
            (
              relative_path: "^zellij$",
              file_type: Binary(
                copy_as: "zellij"
              )
            )
          ]
        ),
        version_extraction: (
          source: TagName
        )
      )
    )
  ]
)